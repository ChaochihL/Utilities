#!/bin/bash
#PBS -l mem=48gb,nodes=1:ppn=12,walltime=03:00:00
#PBS -m abe
#PBS -M username@umn.edu
#PBS -q mesabi

set -e
set -o pipefail

# This is a driver script that stores input arguments and runs bam_vs_fastq_check.sh script,
# which calls on the check_seq_id.py script

# Load required dependencies
module load samtools_ML/1.8.0
module load python3/3.7.1_anaconda

# User provided input arguments
# Please fill out filepaths below
# List containing full filepaths to SAM or BAM files
ALIGNED_LIST=
# List of accession names only. Must match part of SAM/BAM and FASTQ filename.
# Tip: One way to create a list of aligned file accession names is:
#   find $(pwd) -name "*.bam" | sort -V | sed -e 's,/path/to/aligned_dir,,' -e 's,_finished_realigned.bam,,' > prefix_accession_names.txt
ACC_LIST=
# List of FASTQ files that correspond to SAM/BAM samples
FASTQ_LIST=
# FASTQ files suffix (e.g., .fastq.gz)
# Note: This must match the suffix used in the FASTQ_LIST
FASTQ_SUFFIX=
# Specify forward and reverse read naming convention
# Ex: "_R1.fastq.gz" and "_R2.fastq.gz"
FWD_NAMING=
REV_NAMING=
# Full filepath to directory that contains our scripts
# Note: Please make sure bam_vs_fastq_check.sh and check_seq_id.py are in the same directory.
SCRIPT_DIR=
# Full filepath to directory to output files
OUT_DIR=
# Full filepath to scratch directory to temporarily store intermediate files
#   Note: This can be the same as the out directory but can be useful if you are running short
#   on storage space but have a scratch directory that doesn't count toward your storage.
SCRATCH_DIR=
# Which check should we run?
# Valid options: 'CHECK_SEQIDS', 'SEQID_ORIGIN'
# 'CHECK_SEQIDS' outputs a summary of proportion mismatch for each accession and files
#   that tell you which sequence identifers matched/mismatched between SAM/BAM file and
#   fastq file.
# 'SEQID_ORIGIN' does the same as 'CHECK_SEQID' but adds an additional search to
#   find the origin of the mismatched sequence identifiers. This can be informative
#   if there are any file name mixups.
CHECK_MODE=

# Do the work
# Define array
declare -a ACC_ARRAY=($(cat "${ACC_LIST}"))

"${SCRIPT_DIR}"/bam_vs_fastq_check.sh "${ALIGNED_LIST}" \
    "${ACC_ARRAY[${PBS_ARRAYID}]}" \
    "${FASTQ_LIST}" \
    "${FASTQ_SUFFIX}" \
    "${SCRIPT_DIR}" \
    "${OUT_DIR}" \
    "${SCRATCH_DIR}" \
    "${CHECK_MODE}"

cat "${OUT_DIR}"/seqid_checks/temp_*_prop_mismatch.txt | sort -u > "${OUT_DIR}"/seqid_checks/all_accessions_prop_mismatch.txt